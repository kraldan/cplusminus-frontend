TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:2:1> 
  |-FunctionDecl <line:2:5> main 'int ()'
   -FuncBody <line:2:12> 
     -CompoundStmt <line:2:12> 
      |-DeclarStmt <line:8:5> 
      |  -SimpleDeclar <line:8:5> 
      |    -InitDeclarator <line:8:9> 
      |     |-Decl <line:8:9> x1 'int'
      |      -BinaryExpr <line:8:14> '+'
      |       |-BinaryExpr <line:8:14> '*'
      |       | |-IntLiteral <line:8:14> 10
      |       |  -IntLiteral <line:8:17> 2
      |        -IntLiteral <line:8:21> 4
      |-DeclarStmt <line:10:5> 
      |  -SimpleDeclar <line:10:5> 
      |    -InitDeclarator <line:10:9> 
      |     |-Decl <line:10:9> x2 'int'
      |      -BinaryExpr <line:10:14> '<<'
      |       |-BinaryExpr <line:10:14> '-'
      |       | |-IntLiteral <line:10:14> 8
      |       |  -IntLiteral <line:10:18> 5
      |        -IntLiteral <line:10:23> 1
      |-DeclarStmt <line:12:5> 
      |  -SimpleDeclar <line:12:5> 
      |    -InitDeclarator <line:12:9> 
      |     |-Decl <line:12:9> x3 'int'
      |      -BinaryExpr <line:12:14> '&'
      |       |-BinaryExpr <line:12:14> '>>'
      |       | |-IntLiteral <line:12:14> 10
      |       |  -IntLiteral <line:12:20> 1
      |        -IntLiteral <line:12:24> 1
       -ReturnStmt <line:15:5> 
         -BinaryExpr <line:15:12> '+'
          |-BinaryExpr <line:15:12> '+'
          | |-LValToRValExpr <line:15:12> 
          | |  -IdExpr <line:15:12> x1, declared on line 8
          |  -LValToRValExpr <line:15:12> 
          |    -IdExpr <line:15:15> x2, declared on line 10
           -LValToRValExpr <line:15:12> 
             -IdExpr <line:15:18> x3, declared on line 12
