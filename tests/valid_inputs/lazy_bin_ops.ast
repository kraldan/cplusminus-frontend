TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:2:1> 
|  -InitDeclarator <line:2:5> 
|    -Decl <line:2:5> res 'int'
|-FuncDef <line:4:1> 
| |-FunctionDecl <line:4:6> side_effect 'bool (int, bool)'
| | |-Param <line:4:18> 
| | |  -Decl <line:4:22> i 'int'
| |  -Param <line:4:25> 
| |   |-Decl <line:4:30> b 'bool'
| |    -BoolLiteral <line:4:34> true
|  -FuncBody <line:4:40> 
|    -CompoundStmt <line:4:40> 
|     |-ExprStmt <line:5:2> 
|     |  -AssignmentExpr <line:5:2> '+=' lhs_type='int'
|     |   |-IdExpr <line:5:2> res, declared on line 2
|     |    -LValToRValExpr <line:5:2> 
|     |      -IdExpr <line:5:9> i, declared on line 4
|      -ReturnStmt <line:6:2> 
|        -LValToRValExpr <line:6:2> 
|          -IdExpr <line:6:9> b, declared on line 4
 -FuncDef <line:9:1> 
  |-FunctionDecl <line:9:5> main 'int ()'
   -FuncBody <line:9:12> 
     -CompoundStmt <line:9:12> 
      |-ExprStmt <line:10:2> 
      |  -AssignmentExpr <line:10:2> '=' lhs_type='int'
      |   |-IdExpr <line:10:2> res, declared on line 2
      |    -IntLiteral <line:10:8> 0
      |-ExprStmt <line:12:2> 
      |  -BinaryExpr <line:12:2> '&&'
      |   |-CallExpr <line:12:2> 'bool (int, bool)', function declared on line: 4
      |   | |-IdExpr <line:12:2> side_effect, declared on line 4
      |   | |-IntLiteral <line:12:14> 0
      |   |  -BoolLiteral <line:12:17> false
      |    -CallExpr <line:12:27> 'bool (int, bool)', function declared on line: 4
      |     |-IdExpr <line:12:27> side_effect, declared on line 4
      |     |-IntLiteral <line:12:39> 5
      |      -DefaultArgExpr <line:12:27> 
      |        -BoolLiteral <line:4:34> true
      |-ExprStmt <line:13:2> 
      |  -BinaryExpr <line:13:2> '||'
      |   |-CallExpr <line:13:2> 'bool (int, bool)', function declared on line: 4
      |   | |-IdExpr <line:13:2> side_effect, declared on line 4
      |   | |-IntLiteral <line:13:14> 0
      |   |  -BoolLiteral <line:13:17> true
      |    -CallExpr <line:13:26> 'bool (int, bool)', function declared on line: 4
      |     |-IdExpr <line:13:26> side_effect, declared on line 4
      |     |-IntLiteral <line:13:38> 10
      |      -DefaultArgExpr <line:13:26> 
      |        -BoolLiteral <line:4:34> true
       -ReturnStmt <line:14:2> 
         -LValToRValExpr <line:14:2> 
           -IdExpr <line:14:9> res, declared on line 2
