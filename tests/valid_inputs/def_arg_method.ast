TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-ClassDef <line:2:1> struct 'S'
|  -MemberSpecification <line:3:2> 
|   |-FuncDef <line:3:2> 
|   | |-FunctionDecl <line:3:6> foo 'int (const ptr to S, char, int)'
|   | | |-Param <line:3:6> 
|   | | |  -Decl <line:3:6> this 'const ptr to S'
|   | | |-Param <line:3:10> 
|   | | |  -Decl <line:3:15> c 'char'
|   | |  -Param <line:3:18> 
|   | |   |-Decl <line:3:22> i 'int'
|   | |    -IntLiteral <line:3:26> 21
|   |  -FuncBody <line:3:30> 
|   |    -CompoundStmt <line:3:30> 
|   |      -ReturnStmt <line:5:3> 
|   |        -LValToRValExpr <line:5:3> 
|   |          -IdExpr <line:5:10> i, declared on line 3
|    -FuncDef <line:8:5> 
|     |-FunctionDecl <line:8:9> foo 'int (const ptr to S, int)'
|     | |-Param <line:8:9> 
|     | |  -Decl <line:8:9> this 'const ptr to S'
|     |  -Param <line:8:13> 
|     |   |-Decl <line:8:17> i 'int'
|     |    -IntLiteral <line:8:21> 21
|      -FuncBody <line:8:25> 
|        -CompoundStmt <line:8:25> 
|          -ReturnStmt <line:10:9> 
|            -LValToRValExpr <line:10:9> 
|              -IdExpr <line:10:16> i, declared on line 8
|-EmptyDeclaration <line:12:2> 
 -FuncDef <line:14:1> 
  |-FunctionDecl <line:14:5> main 'int ()'
   -FuncBody <line:14:12> 
     -CompoundStmt <line:14:12> 
      |-DeclarStmt <line:15:2> 
      |  -SimpleDeclar <line:15:2> 
      |    -InitDeclarator <line:15:4> 
      |      -Decl <line:15:4> s 'S'
       -ReturnStmt <line:16:2> 
         -BinaryExpr <line:16:9> '+'
          |-CallExpr <line:16:9> 'int (const ptr to S, char, int)', function declared on line: 3
          | |-MemberAccessExpr <line:16:9> .foo
          | |  -IdExpr <line:16:9> s, declared on line 15
          | |-CharLiteral <line:16:15> 'c'
          |  -DefaultArgExpr <line:16:9> 
          |    -IntLiteral <line:3:26> 21
           -CallExpr <line:16:22> 'int (const ptr to S, int)', function declared on line: 8
            |-MemberAccessExpr <line:16:22> .foo
            |  -IdExpr <line:16:22> s, declared on line 15
             -DefaultArgExpr <line:16:22> 
               -IntLiteral <line:8:21> 21
