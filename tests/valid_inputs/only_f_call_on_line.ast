TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-FuncDef <line:3:1> 
| |-FunctionDecl <line:3:6> foo 'void (ptr to int)'
| |  -Param <line:3:10> 
| |    -Decl <line:3:16> a 'ptr to int'
|  -FuncBody <line:3:19> 
|    -CompoundStmt <line:3:19> 
|      -ExprStmt <line:4:2> 
|        -AssignmentExpr <line:4:2> '=' lhs_type='int'
|         |-UnaryExpr <line:4:2> '*'
|         |  -LValToRValExpr <line:4:2> 
|         |    -IdExpr <line:4:3> a, declared on line 3
|          -IntLiteral <line:4:7> 42
 -FuncDef <line:7:1> 
  |-FunctionDecl <line:7:5> main 'int ()'
   -FuncBody <line:7:12> 
     -CompoundStmt <line:7:12> 
      |-DeclarStmt <line:8:2> 
      |  -SimpleDeclar <line:8:2> 
      |    -InitDeclarator <line:8:6> 
      |      -Decl <line:8:6> a 'int'
      |-ExprStmt <line:10:2> 
      |  -CallExpr <line:10:2> 'void (ptr to int)', function declared on line: 3
      |   |-IdExpr <line:10:2> foo, declared on line 3
      |    -UnaryExpr <line:10:6> '&'
      |      -IdExpr <line:10:7> a, declared on line 8
       -ReturnStmt <line:11:2> 
         -LValToRValExpr <line:11:2> 
           -IdExpr <line:11:9> a, declared on line 8
