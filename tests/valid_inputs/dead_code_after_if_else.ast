TranslationUnit <line:1:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-FuncDef <line:1:1> 
| |-FunctionDecl <line:1:5> my_abs 'int (int)'
| |  -Param <line:1:12> 
| |    -Decl <line:1:16> n 'int'
|  -FuncBody <line:1:19> 
|    -CompoundStmt <line:1:19> 
|     |-IfStmt <line:2:5> 
|     | |-Condition <line:2:8> 
|     | |  -BinaryExpr <line:2:8> '>='
|     | |   |-LValToRValExpr <line:2:8> 
|     | |   |  -IdExpr <line:2:8> n, declared on line 1
|     | |    -IntLiteral <line:2:13> 0
|     | |-ReturnStmt <line:3:9> 
|     | |  -LValToRValExpr <line:3:9> 
|     | |    -IdExpr <line:3:16> n, declared on line 1
|     |  -ReturnStmt <line:5:9> 
|     |    -UnaryExpr <line:5:16> '-'
|     |      -LValToRValExpr <line:5:16> 
|     |        -IdExpr <line:5:17> n, declared on line 1
|      -ExprStmt <line:7:2> 
|        -AssignmentExpr <line:7:2> '=' lhs_type='int'
|         |-IdExpr <line:7:2> n, declared on line 1
|          -IntLiteral <line:7:6> 7
 -FuncDef <line:10:1> 
  |-FunctionDecl <line:10:5> main 'int ()'
   -FuncBody <line:10:12> 
     -CompoundStmt <line:10:12> 
       -ReturnStmt <line:11:2> 
         -CallExpr <line:11:9> 'int (int)', function declared on line: 1
          |-IdExpr <line:11:9> my_abs, declared on line 1
           -UnaryExpr <line:11:16> '-'
             -IntLiteral <line:11:17> 42
