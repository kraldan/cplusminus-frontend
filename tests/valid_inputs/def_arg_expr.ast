TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:2:1> 
|  -InitDeclarator <line:2:5> 
|    -Decl <line:2:5> g 'int'
|-FuncDef <line:4:1> 
| |-FunctionDecl <line:4:5> foo 'int (int)'
| |  -Param <line:4:9> 
| |   |-Decl <line:4:13> a 'int'
| |    -BinaryExpr <line:4:17> '+'
| |     |-LValToRValExpr <line:4:17> 
| |     |  -IdExpr <line:4:17> g, declared on line 2
| |      -IntLiteral <line:4:21> 5
|  -FuncBody <line:4:24> 
|    -CompoundStmt <line:4:24> 
|      -ReturnStmt <line:5:2> 
|        -LValToRValExpr <line:5:2> 
|          -IdExpr <line:5:9> a, declared on line 4
 -FuncDef <line:8:1> 
  |-FunctionDecl <line:8:5> main 'int ()'
   -FuncBody <line:8:12> 
     -CompoundStmt <line:8:12> 
      |-ExprStmt <line:9:2> 
      |  -AssignmentExpr <line:9:2> '=' lhs_type='int'
      |   |-IdExpr <line:9:2> g, declared on line 2
      |    -IntLiteral <line:9:6> 37
      |-ExprStmt <line:11:5> 
      |  -AssignmentExpr <line:11:5> '+=' lhs_type='int'
      |   |-IdExpr <line:11:5> g, declared on line 2
      |    -IntLiteral <line:11:10> 0
       -ReturnStmt <line:12:2> 
         -CallExpr <line:12:9> 'int (int)', function declared on line: 4
          |-IdExpr <line:12:9> foo, declared on line 4
           -DefaultArgExpr <line:12:9> 
             -BinaryExpr <line:4:17> '+'
              |-LValToRValExpr <line:4:17> 
              |  -IdExpr <line:4:17> g, declared on line 2
               -IntLiteral <line:4:21> 5
