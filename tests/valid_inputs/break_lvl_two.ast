TranslationUnit <line:1:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:1:1> 
  |-FunctionDecl <line:1:5> main 'int ()'
   -FuncBody <line:1:12> 
     -CompoundStmt <line:1:12> 
      |-DeclarStmt <line:2:5> 
      |  -SimpleDeclar <line:2:5> 
      |   |-InitDeclarator <line:2:9> 
      |   | |-Decl <line:2:9> i 'int'
      |   |  -IntLiteral <line:2:13> 0
      |    -InitDeclarator <line:2:16> 
      |     |-Decl <line:2:16> res 'int'
      |      -IntLiteral <line:2:22> 0
      |-WhileStmt <line:4:5> 
      | |-Condition <line:4:11> 
      | |  -BinaryExpr <line:4:11> '<'
      | |   |-LValToRValExpr <line:4:11> 
      | |   |  -IdExpr <line:4:11> i, declared on line 2
      | |    -IntLiteral <line:4:15> 5
      |  -CompoundStmt <line:4:18> 
      |   |-ExprStmt <line:5:9> 
      |   |  -AssignmentExpr <line:5:9> '+=' lhs_type='int'
      |   |   |-IdExpr <line:5:9> res, declared on line 2
      |   |    -IntLiteral <line:5:16> 10
      |   |-ExprStmt <line:6:9> 
      |   |  -AssignmentExpr <line:6:9> '+=' lhs_type='int'
      |   |   |-IdExpr <line:6:9> i, declared on line 2
      |   |    -IntLiteral <line:6:14> 1
      |    -WhileStmt <line:8:9> 
      |     |-Condition <line:8:15> 
      |     |  -BoolLiteral <line:8:15> true
      |      -CompoundStmt <line:8:21> 
      |        -BreakStmt <line:9:13> break level: 2
       -ReturnStmt <line:12:5> 
         -LValToRValExpr <line:12:5> 
           -IdExpr <line:12:12> res, declared on line 2
