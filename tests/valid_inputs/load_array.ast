TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:2:1> 
|  -InitDeclarator <line:2:5> 
|    -FunctionDecl <line:2:5> scanf 'int (ptr to const char, ...)', first declaration: line 0
|      -Param <line:2:11> 
|        -Decl <line:2:24> fmt 'ptr to const char'
|-SimpleDeclar <line:3:1> 
|  -InitDeclarator <line:3:5> 
|    -FunctionDecl <line:3:5> printf 'int (ptr to const char, ...)', first declaration: line 0
|      -Param <line:3:12> 
|        -Decl <line:3:25> fmt 'ptr to const char'
 -FuncDef <line:5:1> 
  |-FunctionDecl <line:5:5> main 'int ()'
   -FuncBody <line:5:12> 
     -CompoundStmt <line:5:12> 
      |-DeclarStmt <line:9:2> 
      |  -SimpleDeclar <line:9:2> 
      |    -InitDeclarator <line:9:6> 
      |      -Decl <line:9:6> arr '[5 x int]'
      |-ForStmt <line:10:2> 
      | |-SimpleDeclar <line:10:6> 
      | |  -InitDeclarator <line:10:10> 
      | |   |-Decl <line:10:10> i 'int'
      | |    -IntLiteral <line:10:14> 0
      | |-Condition <line:10:17> 
      | |  -BinaryExpr <line:10:17> '<'
      | |   |-LValToRValExpr <line:10:17> 
      | |   |  -IdExpr <line:10:17> i, declared on line 10
      | |    -IntLiteral <line:10:21> 5
      | |-AssignmentExpr <line:10:24> '=' lhs_type='int'
      | | |-IdExpr <line:10:24> i, declared on line 10
      | |  -BinaryExpr <line:10:28> '+'
      | |   |-LValToRValExpr <line:10:28> 
      | |   |  -IdExpr <line:10:28> i, declared on line 10
      | |    -IntLiteral <line:10:32> 1
      |  -ExprStmt <line:11:3> 
      |    -CallExpr <line:11:3> 'int (ptr to const char, ...)', function declared on line: 0
      |     |-IdExpr <line:11:3> scanf, declared on line 0
      |     |-ArrToPtrExpr <line:0:0> 
      |     |  -StringLiteral <line:11:9> "%d"
      |      -UnaryExpr <line:11:15> '&'
      |        -SubscriptExpr <line:11:16> 
      |         |-ArrToPtrExpr <line:0:0> 
      |         |  -IdExpr <line:11:16> arr, declared on line 9
      |          -LValToRValExpr <line:11:16> 
      |            -IdExpr <line:11:20> i, declared on line 10
       -ForStmt <line:12:2> 
        |-SimpleDeclar <line:12:6> 
        |  -InitDeclarator <line:12:10> 
        |   |-Decl <line:12:10> i 'int'
        |    -IntLiteral <line:12:14> 4
        |-Condition <line:12:17> 
        |  -BinaryExpr <line:12:17> '>='
        |   |-LValToRValExpr <line:12:17> 
        |   |  -IdExpr <line:12:17> i, declared on line 12
        |    -IntLiteral <line:12:22> 0
        |-AssignmentExpr <line:12:25> '=' lhs_type='int'
        | |-IdExpr <line:12:25> i, declared on line 12
        |  -BinaryExpr <line:12:29> '-'
        |   |-LValToRValExpr <line:12:29> 
        |   |  -IdExpr <line:12:29> i, declared on line 12
        |    -IntLiteral <line:12:33> 1
         -ExprStmt <line:13:3> 
           -CallExpr <line:13:3> 'int (ptr to const char, ...)', function declared on line: 0
            |-IdExpr <line:13:3> printf, declared on line 0
            |-ArrToPtrExpr <line:0:0> 
            |  -StringLiteral <line:13:10> "%d "
             -LValToRValExpr <line:13:3> 
               -SubscriptExpr <line:13:17> 
                |-ArrToPtrExpr <line:0:0> 
                |  -IdExpr <line:13:17> arr, declared on line 9
                 -LValToRValExpr <line:13:17> 
                   -IdExpr <line:13:21> i, declared on line 12
