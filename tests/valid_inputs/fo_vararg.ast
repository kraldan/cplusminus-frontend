TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-FuncDef <line:3:1> 
| |-FunctionDecl <line:3:5> foo 'int (char, int)'
| | |-Param <line:3:9> 
| | |  -Decl <line:3:14> c 'char'
| |  -Param <line:3:17> 
| |    -Decl <line:3:21> i 'int'
|  -FuncBody <line:3:24> 
|    -CompoundStmt <line:3:24> 
|      -ReturnStmt <line:4:2> 
|        -LValToRValExpr <line:4:2> 
|          -IdExpr <line:4:9> i, declared on line 3
|-FuncDef <line:7:1> 
| |-FunctionDecl <line:7:5> foo 'int (char, ...)'
| |  -Param <line:7:9> 
| |    -Decl <line:7:14> c 'char'
|  -FuncBody <line:7:22> 
|    -CompoundStmt <line:7:22> 
|      -ReturnStmt <line:8:2> 
|        -IntLiteral <line:8:9> 666
 -FuncDef <line:11:1> 
  |-FunctionDecl <line:11:5> main 'int ()'
   -FuncBody <line:11:12> 
     -CompoundStmt <line:11:12> 
      |-DeclarStmt <line:12:2> 
      |  -SimpleDeclar <line:12:2> 
      |    -InitDeclarator <line:12:9> 
      |     |-Decl <line:12:9> d 'double'
      |      -FloatLiteral <line:12:13> 42.000000
       -ReturnStmt <line:13:2> 
         -CallExpr <line:13:9> 'int (char, int)', function declared on line: 3
          |-IdExpr <line:13:9> foo, declared on line 3
          |-CharLiteral <line:13:13> 'a'
           -ImplicitTypeCastExpr <line:13:9> 'int'
             -LValToRValExpr <line:13:9> 
               -IdExpr <line:13:18> d, declared on line 12
