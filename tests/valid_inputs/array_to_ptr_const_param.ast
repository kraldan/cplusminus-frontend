TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-FuncDef <line:2:1> 
| |-FunctionDecl <line:2:5> f 'int (ptr to const int)'
| |  -Param <line:2:7> 
| |    -Decl <line:2:19> p 'ptr to const int'
|  -FuncBody <line:2:22> 
|    -CompoundStmt <line:2:22> 
|      -ReturnStmt <line:3:2> 
|        -LValToRValExpr <line:3:2> 
|          -SubscriptExpr <line:3:9> 
|           |-LValToRValExpr <line:3:9> 
|           |  -IdExpr <line:3:9> p, declared on line 2
|            -IntLiteral <line:3:11> 0
 -FuncDef <line:6:1> 
  |-FunctionDecl <line:6:5> main 'int ()'
   -FuncBody <line:6:12> 
     -CompoundStmt <line:6:12> 
      |-DeclarStmt <line:7:2> 
      |  -SimpleDeclar <line:7:2> 
      |    -InitDeclarator <line:7:6> 
      |      -Decl <line:7:6> arr '[1 x int]'
      |-ExprStmt <line:8:2> 
      |  -AssignmentExpr <line:8:2> '=' lhs_type='int'
      |   |-SubscriptExpr <line:8:2> 
      |   | |-ArrToPtrExpr <line:0:0> 
      |   | |  -IdExpr <line:8:2> arr, declared on line 7
      |   |  -IntLiteral <line:8:6> 0
      |    -IntLiteral <line:8:11> 42
       -ReturnStmt <line:9:2> 
         -CallExpr <line:9:9> 'int (ptr to const int)', function declared on line: 2
          |-IdExpr <line:9:9> f, declared on line 2
           -ArrToPtrExpr <line:0:0> 
             -IdExpr <line:9:11> arr, declared on line 7
