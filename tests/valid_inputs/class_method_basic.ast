TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-ClassDef <line:2:1> struct 'S'
|  -MemberSpecification <line:3:2> 
|    -FuncDef <line:3:2> 
|     |-FunctionDecl <line:3:6> foo 'int (const ptr to S)'
|     |  -Param <line:3:6> 
|     |    -Decl <line:3:6> this 'const ptr to S'
|      -FuncBody <line:3:12> 
|        -CompoundStmt <line:3:12> 
|          -ReturnStmt <line:3:13> 
|            -IntLiteral <line:3:20> 42
|-EmptyDeclaration <line:4:2> 
 -FuncDef <line:6:1> 
  |-FunctionDecl <line:6:5> main 'int ()'
   -FuncBody <line:6:12> 
     -CompoundStmt <line:6:12> 
      |-DeclarStmt <line:7:2> 
      |  -SimpleDeclar <line:7:2> 
      |    -InitDeclarator <line:7:4> 
      |      -Decl <line:7:4> s 'S'
       -ReturnStmt <line:8:2> 
         -CallExpr <line:8:9> 'int (const ptr to S)', function declared on line: 3
           -MemberAccessExpr <line:8:9> .foo
             -IdExpr <line:8:9> s, declared on line 7
