TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:2:1> 
  |-FunctionDecl <line:2:5> main 'int ()'
   -FuncBody <line:2:12> 
     -CompoundStmt <line:2:12> 
      |-DeclarStmt <line:3:2> 
      |  -SimpleDeclar <line:3:2> 
      |   |-InitDeclarator <line:3:6> 
      |   | |-Decl <line:3:7> p 'ptr to int'
      |   |  -ImplicitTypeCastExpr <line:3:6> 'ptr to int'
      |   |    -NullptrLiteral <line:3:11> 
      |    -InitDeclarator <line:3:20> 
      |     |-Decl <line:3:20> i 'int'
      |      -IntLiteral <line:3:24> 42
       -IfStmt <line:4:2> 
        |-Condition <line:4:5> 
        |  -BinaryExpr <line:4:5> '||'
        |   |-ImplicitTypeCastExpr <line:4:5> 'bool'
        |   |  -LValToRValExpr <line:4:5> 
        |   |    -IdExpr <line:4:5> i, declared on line 3
        |    -ImplicitTypeCastExpr <line:4:5> 'bool'
        |      -LValToRValExpr <line:4:5> 
        |        -UnaryExpr <line:4:10> '*'
        |          -LValToRValExpr <line:4:10> 
        |            -IdExpr <line:4:11> p, declared on line 3
         -ReturnStmt <line:5:3> 
           -IntLiteral <line:5:10> 42
