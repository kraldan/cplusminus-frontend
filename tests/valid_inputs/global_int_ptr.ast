TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:3:1> 
|  -InitDeclarator <line:3:5> 
|    -Decl <line:3:7> p 'ptr to int'
 -FuncDef <line:5:1> 
  |-FunctionDecl <line:5:5> main 'int ()'
   -FuncBody <line:5:12> 
     -CompoundStmt <line:5:12> 
      |-DeclarStmt <line:6:2> 
      |  -SimpleDeclar <line:6:2> 
      |    -InitDeclarator <line:6:6> 
      |     |-Decl <line:6:6> i 'int'
      |      -IntLiteral <line:6:10> 42
      |-ExprStmt <line:7:2> 
      |  -AssignmentExpr <line:7:2> '=' lhs_type='ptr to int'
      |   |-IdExpr <line:7:2> p, declared on line 3
      |    -UnaryExpr <line:7:6> '&'
      |      -IdExpr <line:7:7> i, declared on line 6
       -ReturnStmt <line:8:2> 
         -LValToRValExpr <line:8:2> 
           -UnaryExpr <line:8:9> '*'
             -LValToRValExpr <line:8:9> 
               -IdExpr <line:8:10> p, declared on line 3
