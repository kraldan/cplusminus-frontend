TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-ClassDef <line:2:1> struct 'S'
|  -MemberSpecification <line:3:2> 
|   |-MemberDeclaratorList <line:3:6> 
|   |  -Decl <line:3:6> i 'int'
|    -FuncDef <line:4:2> 
|     |-FunctionDecl <line:4:2> S 'void (const ptr to S, char, int)'
|     | |-Param <line:4:2> 
|     | |  -Decl <line:4:2> this 'const ptr to S'
|     | |-Param <line:4:4> 
|     | |  -Decl <line:4:9> c 'char'
|     |  -Param <line:4:12> 
|     |   |-Decl <line:4:16> i 'int'
|     |    -IntLiteral <line:4:20> 42
|      -FuncBody <line:4:24> 
|        -CompoundStmt <line:4:24> 
|          -ExprStmt <line:5:3> 
|            -AssignmentExpr <line:5:3> '=' lhs_type='int'
|             |-MemberAccessExpr <line:5:3> ->i
|             |  -ThisExpr <line:5:3> 
|              -LValToRValExpr <line:5:3> 
|                -IdExpr <line:5:13> i, declared on line 4
|-EmptyDeclaration <line:7:2> 
 -FuncDef <line:9:1> 
  |-FunctionDecl <line:9:5> main 'int ()'
   -FuncBody <line:9:12> 
     -CompoundStmt <line:9:12> 
      |-DeclarStmt <line:10:2> 
      |  -SimpleDeclar <line:10:2> 
      |    -InitDeclarator <line:10:4> 
      |     |-Decl <line:10:4> s 'S'
      |      -CallExpr <line:10:8> ctor call 'void (const ptr to S, char, int)', function declared on line: 4
      |       |-IdExpr <line:10:8> S, declared on line 4
      |       |-CharLiteral <line:10:10> 'a'
      |        -DefaultArgExpr <line:10:8> 
      |          -IntLiteral <line:4:20> 42
       -ReturnStmt <line:11:2> 
         -LValToRValExpr <line:11:2> 
           -MemberAccessExpr <line:11:9> .i
             -IdExpr <line:11:9> s, declared on line 10
