TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-ClassDef <line:3:1> struct 'S'
|  -MemberSpecification <line:4:2> 
|    -MemberDeclaratorList <line:4:6> 
|      -Decl <line:4:6> a 'int'
|-EmptyDeclaration <line:5:2> 
 -FuncDef <line:7:1> 
  |-FunctionDecl <line:7:5> main 'int ()'
   -FuncBody <line:7:12> 
     -CompoundStmt <line:7:12> 
      |-DeclarStmt <line:8:2> 
      |  -SimpleDeclar <line:8:2> 
      |    -InitDeclarator <line:8:4> 
      |      -Decl <line:8:4> s 'S'
      |-ExprStmt <line:9:2> 
      |  -AssignmentExpr <line:9:2> '=' lhs_type='int'
      |   |-MemberAccessExpr <line:9:2> .a
      |   |  -IdExpr <line:9:2> s, declared on line 8
      |    -IntLiteral <line:9:8> 21
      |-ExprStmt <line:10:2> 
      |  -AssignmentExpr <line:10:2> '+=' lhs_type='int'
      |   |-MemberAccessExpr <line:10:2> ->a
      |   |  -UnaryExpr <line:10:3> '&'
      |   |    -IdExpr <line:10:4> s, declared on line 8
      |    -IntLiteral <line:10:13> 21
       -ReturnStmt <line:11:2> 
         -LValToRValExpr <line:11:2> 
           -MemberAccessExpr <line:11:9> .a
             -IdExpr <line:11:9> s, declared on line 8
