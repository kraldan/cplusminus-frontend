TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:3:1> 
  |-FunctionDecl <line:3:5> main 'int ()'
   -FuncBody <line:3:12> 
     -CompoundStmt <line:3:12> 
      |-DeclarStmt <line:4:2> 
      |  -SimpleDeclar <line:4:2> 
      |    -InitDeclarator <line:4:6> 
      |      -Decl <line:4:6> arr '[2 x int]'
      |-DeclarStmt <line:5:2> 
      |  -SimpleDeclar <line:5:2> 
      |   |-InitDeclarator <line:5:7> 
      |   | |-Decl <line:5:8> p0 'ptr to int'
      |   |  -UnaryExpr <line:5:13> '&'
      |   |    -SubscriptExpr <line:5:14> 
      |   |     |-ArrToPtrExpr <line:0:0> 
      |   |     |  -IdExpr <line:5:14> arr, declared on line 4
      |   |      -IntLiteral <line:5:18> 0
      |    -InitDeclarator <line:6:3> 
      |     |-Decl <line:6:4> p1 'ptr to int'
      |      -UnaryExpr <line:6:9> '&'
      |        -SubscriptExpr <line:6:10> 
      |         |-ArrToPtrExpr <line:0:0> 
      |         |  -IdExpr <line:6:10> arr, declared on line 4
      |          -IntLiteral <line:6:14> 1
      |-DeclarStmt <line:7:2> 
      |  -SimpleDeclar <line:7:2> 
      |    -InitDeclarator <line:7:6> 
      |     |-Decl <line:7:6> res 'int'
      |      -IntLiteral <line:7:12> 0
      |-IfStmt <line:9:2> 
      | |-Condition <line:9:5> 
      | |  -BinaryExpr <line:9:5> '=='
      | |   |-LValToRValExpr <line:9:5> 
      | |   |  -IdExpr <line:9:5> p0, declared on line 5
      | |    -LValToRValExpr <line:9:5> 
      | |      -IdExpr <line:9:11> p0, declared on line 5
      |  -ExprStmt <line:10:3> 
      |    -AssignmentExpr <line:10:3> '+=' lhs_type='int'
      |     |-IdExpr <line:10:3> res, declared on line 7
      |      -IntLiteral <line:10:10> 7
      |-IfStmt <line:11:2> 
      | |-Condition <line:11:5> 
      | |  -BinaryExpr <line:11:5> '&&'
      | |   |-BinaryExpr <line:11:5> '<='
      | |   | |-LValToRValExpr <line:11:5> 
      | |   | |  -IdExpr <line:11:5> p0, declared on line 5
      | |   |  -LValToRValExpr <line:11:5> 
      | |   |    -IdExpr <line:11:11> p1, declared on line 6
      | |    -BinaryExpr <line:11:17> '<='
      | |     |-LValToRValExpr <line:11:17> 
      | |     |  -IdExpr <line:11:17> p1, declared on line 6
      | |      -LValToRValExpr <line:11:17> 
      | |        -IdExpr <line:11:23> p1, declared on line 6
      |  -ExprStmt <line:12:3> 
      |    -AssignmentExpr <line:12:3> '+=' lhs_type='int'
      |     |-IdExpr <line:12:3> res, declared on line 7
      |      -IntLiteral <line:12:10> 7
      |-IfStmt <line:13:2> 
      | |-Condition <line:13:5> 
      | |  -BinaryExpr <line:13:5> '<'
      | |   |-LValToRValExpr <line:13:5> 
      | |   |  -IdExpr <line:13:5> p0, declared on line 5
      | |    -LValToRValExpr <line:13:5> 
      | |      -IdExpr <line:13:10> p1, declared on line 6
      |  -ExprStmt <line:14:3> 
      |    -AssignmentExpr <line:14:3> '+=' lhs_type='int'
      |     |-IdExpr <line:14:3> res, declared on line 7
      |      -IntLiteral <line:14:10> 7
      |-IfStmt <line:15:2> 
      | |-Condition <line:15:5> 
      | |  -BinaryExpr <line:15:5> '!='
      | |   |-LValToRValExpr <line:15:5> 
      | |   |  -IdExpr <line:15:5> p0, declared on line 5
      | |    -LValToRValExpr <line:15:5> 
      | |      -IdExpr <line:15:11> p1, declared on line 6
      |  -ExprStmt <line:16:3> 
      |    -AssignmentExpr <line:16:3> '+=' lhs_type='int'
      |     |-IdExpr <line:16:3> res, declared on line 7
      |      -IntLiteral <line:16:10> 7
      |-IfStmt <line:17:2> 
      | |-Condition <line:17:5> 
      | |  -BinaryExpr <line:17:5> '&&'
      | |   |-BinaryExpr <line:17:5> '>='
      | |   | |-LValToRValExpr <line:17:5> 
      | |   | |  -IdExpr <line:17:5> p1, declared on line 6
      | |   |  -LValToRValExpr <line:17:5> 
      | |   |    -IdExpr <line:17:11> p0, declared on line 5
      | |    -BinaryExpr <line:17:17> '>='
      | |     |-LValToRValExpr <line:17:17> 
      | |     |  -IdExpr <line:17:17> p1, declared on line 6
      | |      -LValToRValExpr <line:17:17> 
      | |        -IdExpr <line:17:23> p1, declared on line 6
      |  -ExprStmt <line:18:3> 
      |    -AssignmentExpr <line:18:3> '+=' lhs_type='int'
      |     |-IdExpr <line:18:3> res, declared on line 7
      |      -IntLiteral <line:18:10> 7
      |-IfStmt <line:19:2> 
      | |-Condition <line:19:5> 
      | |  -BinaryExpr <line:19:5> '>'
      | |   |-LValToRValExpr <line:19:5> 
      | |   |  -IdExpr <line:19:5> p1, declared on line 6
      | |    -LValToRValExpr <line:19:5> 
      | |      -IdExpr <line:19:10> p0, declared on line 5
      |  -ExprStmt <line:20:3> 
      |    -AssignmentExpr <line:20:3> '+=' lhs_type='int'
      |     |-IdExpr <line:20:3> res, declared on line 7
      |      -IntLiteral <line:20:10> 7
       -ReturnStmt <line:21:2> 
         -BinaryExpr <line:21:9> '-'
          |-BinaryExpr <line:21:9> '+'
          | |-LValToRValExpr <line:21:9> 
          | |  -IdExpr <line:21:9> res, declared on line 7
          |  -BinaryExpr <line:21:16> '-'
          |   |-LValToRValExpr <line:21:16> 
          |   |  -IdExpr <line:21:16> p1, declared on line 6
          |    -LValToRValExpr <line:21:16> 
          |      -IdExpr <line:21:21> p0, declared on line 5
           -IntLiteral <line:21:27> 1
