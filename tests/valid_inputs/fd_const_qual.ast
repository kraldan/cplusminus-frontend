TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:3:1> 
|  -InitDeclarator <line:3:5> 
|    -FunctionDecl <line:3:5> foo 'int (const int)'
|      -Param <line:3:9> 
|        -Decl <line:3:19> a 'const int'
|-FuncDef <line:5:1> 
| |-FunctionDecl <line:5:5> foo 'int (int)', first declaration: line 3
| |  -Param <line:5:9> 
| |    -Decl <line:5:13> a 'int'
|  -FuncBody <line:5:16> 
|    -CompoundStmt <line:5:16> 
|     |-ExprStmt <line:6:2> 
|     |  -AssignmentExpr <line:6:2> '=' lhs_type='int'
|     |   |-IdExpr <line:6:2> a, declared on line 5
|     |    -IntLiteral <line:6:6> 5
|      -ReturnStmt <line:7:2> 
|        -IntLiteral <line:7:9> 42
|-SimpleDeclar <line:10:1> 
|  -InitDeclarator <line:10:5> 
|    -FunctionDecl <line:10:5> foo 'int (const int)', first declaration: line 3
|      -Param <line:10:9> 
|        -Decl <line:10:19> a 'const int'
 -FuncDef <line:12:1> 
  |-FunctionDecl <line:12:5> main 'int ()'
   -FuncBody <line:12:12> 
     -CompoundStmt <line:12:12> 
       -ReturnStmt <line:13:2> 
         -CallExpr <line:13:9> 'int (const int)', function declared on line: 3
          |-IdExpr <line:13:9> foo, declared on line 3
           -IntLiteral <line:13:13> 0
