TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-ClassDef <line:2:1> struct 'S'
|  -MemberSpecification <line:3:2> 
|   |-MemberDeclaratorList <line:3:6> 
|   |  -Decl <line:3:6> a 'int'
|   |-FuncDef <line:4:2> 
|   | |-FunctionDecl <line:4:6> bar 'int (const ptr to S)'
|   | |  -Param <line:4:6> 
|   | |    -Decl <line:4:6> this 'const ptr to S'
|   |  -FuncBody <line:4:12> 
|   |    -CompoundStmt <line:4:12> 
|   |      -ReturnStmt <line:4:13> 
|   |        -IntLiteral <line:4:20> 40
|    -FuncDef <line:5:2> 
|     |-FunctionDecl <line:5:6> foo 'int (const ptr to S)'
|     |  -Param <line:5:6> 
|     |    -Decl <line:5:6> this 'const ptr to S'
|      -FuncBody <line:5:12> 
|        -CompoundStmt <line:5:12> 
|          -ReturnStmt <line:5:13> 
|            -BinaryExpr <line:5:20> '+'
|             |-LValToRValExpr <line:5:20> 
|             |  -MemberAccessExpr <line:5:20> ->a
|             |    -ThisExpr <line:5:20> 
|              -CallExpr <line:5:30> 'int (const ptr to S)', function declared on line: 4
|                -MemberAccessExpr <line:5:30> ->bar
|                  -ThisExpr <line:5:30> 
 -FuncDef <line:8:1> 
  |-FunctionDecl <line:8:5> main 'int ()'
   -FuncBody <line:8:12> 
     -CompoundStmt <line:8:12> 
      |-DeclarStmt <line:9:2> 
      |  -SimpleDeclar <line:9:2> 
      |    -InitDeclarator <line:9:4> 
      |      -Decl <line:9:4> s 'S'
      |-ExprStmt <line:10:2> 
      |  -AssignmentExpr <line:10:2> '=' lhs_type='int'
      |   |-MemberAccessExpr <line:10:2> .a
      |   |  -IdExpr <line:10:2> s, declared on line 9
      |    -IntLiteral <line:10:8> 2
       -ReturnStmt <line:11:2> 
         -CallExpr <line:11:9> 'int (const ptr to S)', function declared on line: 5
           -MemberAccessExpr <line:11:9> .foo
             -IdExpr <line:11:9> s, declared on line 9
