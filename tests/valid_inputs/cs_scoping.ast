TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:2:1> 
  |-FunctionDecl <line:2:5> main 'int ()'
   -FuncBody <line:2:12> 
     -CompoundStmt <line:2:12> 
      |-DeclarStmt <line:3:2> 
      |  -SimpleDeclar <line:3:2> 
      |   |-InitDeclarator <line:3:6> 
      |   | |-Decl <line:3:6> i 'int'
      |   |  -IntLiteral <line:3:10> 5
      |    -InitDeclarator <line:3:13> 
      |      -Decl <line:3:13> a 'int'
      |-CompoundStmt <line:4:2> 
      | |-DeclarStmt <line:5:3> 
      | |  -SimpleDeclar <line:5:3> 
      | |    -InitDeclarator <line:5:7> 
      | |     |-Decl <line:5:7> i 'int'
      | |      -IntLiteral <line:5:11> 3
      |  -ExprStmt <line:6:3> 
      |    -AssignmentExpr <line:6:3> '=' lhs_type='int'
      |     |-IdExpr <line:6:3> a, declared on line 3
      |      -LValToRValExpr <line:6:3> 
      |        -IdExpr <line:6:7> i, declared on line 5
       -ReturnStmt <line:8:2> 
         -BinaryExpr <line:8:9> '+'
          |-LValToRValExpr <line:8:9> 
          |  -IdExpr <line:8:9> a, declared on line 3
           -LValToRValExpr <line:8:9> 
             -IdExpr <line:8:11> i, declared on line 3
