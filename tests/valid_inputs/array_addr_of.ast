TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:2:1> 
  |-FunctionDecl <line:2:5> main 'int ()'
   -FuncBody <line:2:12> 
     -CompoundStmt <line:2:12> 
      |-DeclarStmt <line:3:2> 
      |  -SimpleDeclar <line:3:2> 
      |    -InitDeclarator <line:3:6> 
      |      -Decl <line:3:6> arr '[5 x int]'
      |-ExprStmt <line:4:2> 
      |  -AssignmentExpr <line:4:2> '=' lhs_type='int'
      |   |-SubscriptExpr <line:4:2> 
      |   | |-ArrToPtrExpr <line:0:0> 
      |   | |  -IdExpr <line:4:2> arr, declared on line 3
      |   |  -IntLiteral <line:4:6> 2
      |    -IntLiteral <line:4:11> 42
      |-DeclarStmt <line:5:2> 
      |  -SimpleDeclar <line:5:2> 
      |    -InitDeclarator <line:5:6> 
      |     |-Decl <line:5:8> ptr_to_arr 'ptr to [5 x int]'
      |      -UnaryExpr <line:5:25> '&'
      |        -IdExpr <line:5:26> arr, declared on line 3
       -ReturnStmt <line:6:2> 
         -LValToRValExpr <line:6:2> 
           -SubscriptExpr <line:6:9> 
            |-ArrToPtrExpr <line:0:0> 
            |  -UnaryExpr <line:6:10> '*'
            |    -LValToRValExpr <line:6:10> 
            |      -IdExpr <line:6:11> ptr_to_arr, declared on line 5
             -IntLiteral <line:6:23> 2
