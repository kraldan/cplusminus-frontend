TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:2:1> 
  |-FunctionDecl <line:2:5> main 'int ()'
   -FuncBody <line:2:12> 
     -CompoundStmt <line:2:12> 
      |-DeclarStmt <line:3:2> 
      |  -SimpleDeclar <line:3:2> 
      |    -InitDeclarator <line:3:6> 
      |      -Decl <line:3:6> arr '[1 x int]'
      |-ExprStmt <line:3:14> 
      |  -AssignmentExpr <line:3:14> '=' lhs_type='int'
      |   |-SubscriptExpr <line:3:14> 
      |   | |-ArrToPtrExpr <line:0:0> 
      |   | |  -IdExpr <line:3:14> arr, declared on line 3
      |   |  -IntLiteral <line:3:18> 0
      |    -IntLiteral <line:3:23> 42
      |-DeclarStmt <line:4:2> 
      |  -SimpleDeclar <line:4:2> 
      |    -InitDeclarator <line:4:7> 
      |     |-Decl <line:4:8> vp 'ptr to void'
      |      -CastExpr <line:4:13> 'ptr to void'
      |        -ArrToPtrExpr <line:0:0> 
      |          -IdExpr <line:4:22> arr, declared on line 3
      |-DeclarStmt <line:5:2> 
      |  -SimpleDeclar <line:5:2> 
      |    -InitDeclarator <line:5:6> 
      |     |-Decl <line:5:7> p 'ptr to int'
      |      -CastExpr <line:5:11> 'ptr to int'
      |        -LValToRValExpr <line:5:11> 
      |          -IdExpr <line:5:17> vp, declared on line 4
       -ReturnStmt <line:6:2> 
         -LValToRValExpr <line:6:2> 
           -SubscriptExpr <line:6:9> 
            |-LValToRValExpr <line:6:9> 
            |  -IdExpr <line:6:9> p, declared on line 5
             -IntLiteral <line:6:11> 0
