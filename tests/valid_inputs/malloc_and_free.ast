TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:3:1> 
|  -InitDeclarator <line:3:6> 
|    -FunctionDecl <line:3:8> malloc 'ptr to void (int)', first declaration: line 0
|      -Param <line:3:15> 
|        -Decl <line:3:19> bytes 'int'
|-SimpleDeclar <line:4:1> 
|  -InitDeclarator <line:4:6> 
|    -FunctionDecl <line:4:6> free 'void (ptr to void)', first declaration: line 0
|      -Param <line:4:11> 
|        -Decl <line:4:18> ptr 'ptr to void'
 -FuncDef <line:6:1> 
  |-FunctionDecl <line:6:5> main 'int ()'
   -FuncBody <line:6:12> 
     -CompoundStmt <line:6:12> 
      |-DeclarStmt <line:8:2> 
      |  -SimpleDeclar <line:8:2> 
      |    -InitDeclarator <line:8:6> 
      |     |-Decl <line:8:7> ptr 'ptr to int'
      |      -CastExpr <line:8:13> 'ptr to int'
      |        -CallExpr <line:8:21> 'ptr to void (int)', function declared on line: 0
      |         |-IdExpr <line:8:21> malloc, declared on line 0
      |          -IntLiteral <line:8:28> 64
      |-ExprStmt <line:9:2> 
      |  -AssignmentExpr <line:9:2> '=' lhs_type='int'
      |   |-SubscriptExpr <line:9:2> 
      |   | |-LValToRValExpr <line:9:2> 
      |   | |  -IdExpr <line:9:2> ptr, declared on line 8
      |   |  -IntLiteral <line:9:6> 0
      |    -IntLiteral <line:9:11> 42
      |-DeclarStmt <line:10:2> 
      |  -SimpleDeclar <line:10:2> 
      |    -InitDeclarator <line:10:6> 
      |     |-Decl <line:10:6> ret 'int'
      |      -LValToRValExpr <line:10:6> 
      |        -SubscriptExpr <line:10:12> 
      |         |-LValToRValExpr <line:10:12> 
      |         |  -IdExpr <line:10:12> ptr, declared on line 8
      |          -IntLiteral <line:10:16> 0
      |-ExprStmt <line:11:2> 
      |  -CallExpr <line:11:2> 'void (ptr to void)', function declared on line: 0
      |   |-IdExpr <line:11:2> free, declared on line 0
      |    -ImplicitTypeCastExpr <line:11:2> 'ptr to void'
      |      -LValToRValExpr <line:11:2> 
      |        -IdExpr <line:11:7> ptr, declared on line 8
       -ReturnStmt <line:12:2> 
         -LValToRValExpr <line:12:2> 
           -IdExpr <line:12:9> ret, declared on line 10
