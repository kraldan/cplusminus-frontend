TranslationUnit <line:3:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
 -FuncDef <line:3:1> 
  |-FunctionDecl <line:3:5> main 'int ()'
   -FuncBody <line:3:12> 
     -CompoundStmt <line:3:12> 
      |-DeclarStmt <line:4:2> 
      |  -SimpleDeclar <line:4:2> 
      |    -InitDeclarator <line:4:6> 
      |     |-Decl <line:4:6> res 'int'
      |      -IntLiteral <line:4:12> 0
      |-IfStmt <line:5:2> 
      | |-Condition <line:5:5> 
      | |  -BoolLiteral <line:5:5> false
      | |-ExprStmt <line:6:3> 
      | |  -AssignmentExpr <line:6:3> '+=' lhs_type='int'
      | |   |-IdExpr <line:6:3> res, declared on line 4
      | |    -IntLiteral <line:6:10> 1
      |  -IfStmt <line:7:7> 
      |   |-Condition <line:7:10> 
      |   |  -BoolLiteral <line:7:10> true
      |   |-ExprStmt <line:8:3> 
      |   |  -AssignmentExpr <line:8:3> '+=' lhs_type='int'
      |   |   |-IdExpr <line:8:3> res, declared on line 4
      |   |    -IntLiteral <line:8:10> 42
      |    -IfStmt <line:9:7> 
      |     |-Condition <line:9:10> 
      |     |  -BinaryExpr <line:9:10> '<'
      |     |   |-IntLiteral <line:9:10> 5
      |     |    -IntLiteral <line:9:14> 10
      |     |-ExprStmt <line:10:3> 
      |     |  -AssignmentExpr <line:10:3> '+=' lhs_type='int'
      |     |   |-IdExpr <line:10:3> res, declared on line 4
      |     |    -IntLiteral <line:10:10> 666
      |      -ExprStmt <line:12:3> 
      |        -AssignmentExpr <line:12:3> '+=' lhs_type='int'
      |         |-IdExpr <line:12:3> res, declared on line 4
      |          -IntLiteral <line:12:10> 10
       -ReturnStmt <line:13:2> 
         -LValToRValExpr <line:13:2> 
           -IdExpr <line:13:9> res, declared on line 4
