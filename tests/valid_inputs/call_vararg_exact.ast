TranslationUnit <line:2:1> 
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> printf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> scanf 'int (ptr to const char, ...)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> malloc 'ptr to void (int)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> bytes 'int'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> free 'void (ptr to void)'
|      -Param <line:0:0> 
|        -Decl <line:0:0> ptr 'ptr to void'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sprintf 'int (ptr to char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> dest 'ptr to char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-SimpleDeclar <line:0:0> 
|  -InitDeclarator <line:0:0> 
|    -FunctionDecl <line:0:0> sscanf 'int (ptr to const char, ptr to const char, ...)'
|     |-Param <line:0:0> 
|     |  -Decl <line:0:0> src 'ptr to const char'
|      -Param <line:0:0> 
|        -Decl <line:0:0> format 'ptr to const char'
|-FuncDef <line:2:1> 
| |-FunctionDecl <line:2:5> foo 'int (int, ...)'
| |  -Param <line:2:9> 
| |    -Decl <line:2:13> i 'int'
|  -FuncBody <line:2:21> 
|    -CompoundStmt <line:2:21> 
|      -ReturnStmt <line:3:2> 
|        -LValToRValExpr <line:3:2> 
|          -IdExpr <line:3:9> i, declared on line 2
 -FuncDef <line:6:1> 
  |-FunctionDecl <line:6:5> main 'int ()'
   -FuncBody <line:6:12> 
     -CompoundStmt <line:6:12> 
       -ReturnStmt <line:7:2> 
         -CallExpr <line:7:9> 'int (int, ...)', function declared on line: 2
          |-IdExpr <line:7:9> foo, declared on line 2
           -IntLiteral <line:7:13> 42
